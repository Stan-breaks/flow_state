name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: zip
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          BIN=flow_state

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            BIN="${BIN}.exe"
          fi

          ARCHIVE="${BIN}-${{ matrix.target }}.${{ matrix.ext }}"

          if [ "${{ matrix.ext }}" = "zip" ]; then
            zip "$ARCHIVE" "$BIN"
          else
            tar -czvf "$ARCHIVE" "$BIN"
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            target/${{ matrix.target }}/release/*.zip
            target/${{ matrix.target }}/release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

