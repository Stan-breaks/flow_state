name: Release

permissions:
  contents: write 

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      # Package for Linux/macOS
      - name: Package binary (tar.gz)
        if: matrix.archive == 'tar.gz'
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf flow_state-${{ github.ref_name }}-${{ matrix.target }}.tar.gz flow_state
          mv flow_state-*${{ matrix.archive }} ../../../..

      # Package for Windows
      - name: Package binary (zip)
        if: matrix.archive == 'zip'
        shell: pwsh
        run: |
          $outFile = "flow_state-${{ github.ref_name }}-${{ matrix.target }}.zip"
          Compress-Archive -Path "target/${{ matrix.target }}/release/flow_state.exe" -DestinationPath $outFile
          Move-Item $outFile .

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-archive
          path: flow_state-*${{ matrix.archive }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display downloaded files
        run: ls -R artifacts

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.{tar.gz,zip}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

