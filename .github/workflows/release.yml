name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: zip
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          BINARY_NAME=flow_state

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
            7z a "${BINARY_NAME}-${{ matrix.target }}.zip" "$BINARY_NAME"
          elif [ "${{ matrix.archive }}" = "zip" ]; then
            zip "${BINARY_NAME}-${{ matrix.target }}.zip" "$BINARY_NAME"
          else
            tar -czvf "${BINARY_NAME}-${{ matrix.target }}.tar.gz" "$BINARY_NAME"
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/*.{zip,tar.gz}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

